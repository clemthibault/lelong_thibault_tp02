{"ast":null,"code":"var _jsxFileName = \"/Users/ludovic/Desktop/react-firebase-chat-master/src/App.js\";\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/analytics';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB3Mv67__Xp5yLYXYrXgScAklWZqRq0Qd0\",\n  authDomain: \"projet-nodejs-react.firebaseapp.com\",\n  projectId: \"projet-nodejs-react\",\n  storageBucket: \"projet-nodejs-react.appspot.com\",\n  messagingSenderId: \"938701393577\",\n  appId: \"1:938701393577:web:8c9e1481a0eec59ef0a3b8\"\n});\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChatRoom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })));\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(100);\n  const [messages] = useCollectionData(query, {\n    idField: 'id'\n  });\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setFormValue('');\n    dummy.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, messages && messages.map(msg => /*#__PURE__*/React.createElement(ChatMessage, {\n    key: msg.id,\n    message: msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 40\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    ref: dummy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"maValise\",\n    onSubmit: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"SizeBarrSend\",\n    value: formValue,\n    onChange: e => setFormValue(e.target.value),\n    placeholder: \"Ecriver ce que vous voulez ici puis cliquer sur le bouton envoyer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"button-29\",\n    type: \"submit\",\n    disabled: !formValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Envoyer\")));\n}\n\nfunction ChatMessage(props) {\n  const {\n    text\n  } = props.message;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, text)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ludovic/Desktop/react-firebase-chat-master/src/App.js"],"names":["React","useRef","useState","firebase","useCollectionData","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","analytics","App","ChatRoom","dummy","messagesRef","collection","query","orderBy","limit","messages","idField","formValue","setFormValue","sendMessage","e","preventDefault","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","id","target","value","ChatMessage","props","message"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\n\n\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport 'firebase/analytics';\n\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n   apiKey: \"AIzaSyB3Mv67__Xp5yLYXYrXgScAklWZqRq0Qd0\",\n  authDomain: \"projet-nodejs-react.firebaseapp.com\",\n  projectId: \"projet-nodejs-react\",\n  storageBucket: \"projet-nodejs-react.appspot.com\",\n  messagingSenderId: \"938701393577\",\n  appId: \"1:938701393577:web:8c9e1481a0eec59ef0a3b8\"\n})\n\n\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\n\nfunction App() {\n\n\n\n  return (\n    <div className=\"container\">\n      \n      <section>\n\n        { <ChatRoom /> }\n      </section>\n\n    </div>\n  );\n}\n\n\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(100);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form className=\"maValise\" onSubmit={sendMessage}>\n\n      <input className=\"SizeBarrSend\" value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Ecriver ce que vous voulez ici puis cliquer sur le bouton envoyer\" />\n\n      <button class=\"button-29\" type=\"submit\" disabled={!formValue}>Envoyer</button>\n\n    </form>\n  </>)\n}\n\n\n\n\n\n\n\n\n\n\n\n\nfunction ChatMessage(props) {\n  const { text } = props.message;\n\n\n  return (\n  <>\n  <div>\n      <p>{text}</p>\n    </div>\n  </>\n  )\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}