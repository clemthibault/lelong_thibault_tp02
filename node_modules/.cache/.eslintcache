[{"/Users/clemencethibault/Desktop/chat/lelong_thibault_tp02/src/index.js":"1","/Users/clemencethibault/Desktop/chat/lelong_thibault_tp02/src/serviceWorker.js":"2","/Users/clemencethibault/Desktop/chat/lelong_thibault_tp02/src/App.js":"3"},{"size":503,"mtime":1600882773000,"results":"4","hashOfConfig":"5"},{"size":5086,"mtime":1600882773000,"results":"6","hashOfConfig":"5"},{"size":2019,"mtime":1655729583000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14axy9",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"/Users/clemencethibault/Desktop/chat/lelong_thibault_tp02/src/index.js",[],[],"/Users/clemencethibault/Desktop/chat/lelong_thibault_tp02/src/serviceWorker.js",[],[],"/Users/clemencethibault/Desktop/chat/lelong_thibault_tp02/src/App.js",["18"],[],"import React, { useRef, useState } from 'react';\nimport './App.css';\n\n\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport 'firebase/analytics';\n\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n   apiKey: \"AIzaSyB3Mv67__Xp5yLYXYrXgScAklWZqRq0Qd0\",\n  authDomain: \"projet-nodejs-react.firebaseapp.com\",\n  projectId: \"projet-nodejs-react\",\n  storageBucket: \"projet-nodejs-react.appspot.com\",\n  messagingSenderId: \"938701393577\",\n  appId: \"1:938701393577:web:8c9e1481a0eec59ef0a3b8\"\n})\n\n\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\n\nfunction App() {\n\n\n\n  return (\n    <div className=\"container\">\n      \n      <section>\n\n        { <ChatRoom /> }\n      </section>\n\n    </div>\n  );\n}\n\n\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(100);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form className=\"maValise\" onSubmit={sendMessage}>\n\n      <input className=\"SizeBarrSend\" value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Ecriver ce que vous voulez ici, puis cliquer sur le bouton envoyer\" />\n\n      <button class=\"button-29\" type=\"submit\" disabled={!formValue}>Envoyer</button>\n\n    </form>\n  </>)\n}\n\n\n\n\n\n\n\n\n\n\n\n\nfunction ChatMessage(props) {\n  const { text } = props.message;\n\n\n  return (\n  <>\n  <div>\n      <p>{text}</p>\n    </div>\n  </>\n  )\n}\n\n\nexport default App;\n",{"ruleId":"19","severity":1,"message":"20","line":25,"column":7,"nodeType":"21","messageId":"22","endLine":25,"endColumn":16},"no-unused-vars","'analytics' is assigned a value but never used.","Identifier","unusedVar"]